plugins {
    id 'java'
    id 'application'
}

group = 'com.example.submission'
version = '0.1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withJavadocJar()
    withSourcesJar()
}

def sparkJvmArgs = ['--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
                    '--add-opens', 'java.security.jgss/sun.security.krb5=ALL-UNNAMED',
                    '--add-opens', 'java.base/sun.util.calendar=ALL-UNNAMED',
                    '--add-opens', 'java.base/sun.security.action=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.util.concurrent.atomic=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.util.concurrent=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.util=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.io=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang.reflect=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang.invoke=ALL-UNNAMED',
                    '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
]

/**
 * --add-opens=java.base/java.lang=ALL-UNNAMED \
 --add-opens=java.base/java.lang.invoke=ALL-UNNAMED \
 --add-opens=java.base/java.lang.reflect=ALL-UNNAMED \
 --add-opens=java.base/java.io=ALL-UNNAMED \
 --add-opens=java.base/java.net=ALL-UNNAMED \
 --add-opens=java.base/java.nio=ALL-UNNAMED \
 --add-opens=java.base/java.util=ALL-UNNAMED \
 --add-opens=java.base/java.util.concurrent=ALL-UNNAMED \
 --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED \
 --add-opens=java.base/sun.nio.ch=ALL-UNNAMED \
 --add-opens=java.base/sun.nio.cs=ALL-UNNAMED \
 --add-opens=java.base/sun.security.action=ALL-UNNAMED \
 --add-opens=java.base/sun.util.calendar=ALL-UNNAMED \
 --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED \
 */


application {
    mainClass = 'com.example.submission.App'
    applicationDefaultJvmArgs = sparkJvmArgs
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.spark:spark-core_2.12:3.5.1'
    implementation 'org.apache.spark:spark-sql_2.12:3.5.1'
    implementation 'software.amazon.awssdk:dynamodb:2.25.30'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    jvmArgs sparkJvmArgs
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.register('stage') {
    dependsOn tasks.named('installDist')
}
